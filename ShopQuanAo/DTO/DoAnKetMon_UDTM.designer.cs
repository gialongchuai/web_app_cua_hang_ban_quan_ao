#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name= "DoAnKetMon_UDTM")]
	public partial class DoAnKetMon_UDTMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietDonHang(ChiTietDonHang instance);
    partial void UpdateChiTietDonHang(ChiTietDonHang instance);
    partial void DeleteChiTietDonHang(ChiTietDonHang instance);
    partial void InsertThongTinGiaoHang(ThongTinGiaoHang instance);
    partial void UpdateThongTinGiaoHang(ThongTinGiaoHang instance);
    partial void DeleteThongTinGiaoHang(ThongTinGiaoHang instance);
    partial void InsertChiTietKhuyenMai(ChiTietKhuyenMai instance);
    partial void UpdateChiTietKhuyenMai(ChiTietKhuyenMai instance);
    partial void DeleteChiTietKhuyenMai(ChiTietKhuyenMai instance);
    partial void InsertChiTietSanPham(ChiTietSanPham instance);
    partial void UpdateChiTietSanPham(ChiTietSanPham instance);
    partial void DeleteChiTietSanPham(ChiTietSanPham instance);
    partial void InsertDanhMuc(DanhMuc instance);
    partial void UpdateDanhMuc(DanhMuc instance);
    partial void DeleteDanhMuc(DanhMuc instance);
    partial void InsertDonHang(DonHang instance);
    partial void UpdateDonHang(DonHang instance);
    partial void DeleteDonHang(DonHang instance);
    partial void InsertGioHang(GioHang instance);
    partial void UpdateGioHang(GioHang instance);
    partial void DeleteGioHang(GioHang instance);
    partial void InsertKhuyenMai(KhuyenMai instance);
    partial void UpdateKhuyenMai(KhuyenMai instance);
    partial void DeleteKhuyenMai(KhuyenMai instance);
    partial void InsertManHinh(ManHinh instance);
    partial void UpdateManHinh(ManHinh instance);
    partial void DeleteManHinh(ManHinh instance);
    partial void InsertMau(Mau instance);
    partial void UpdateMau(Mau instance);
    partial void DeleteMau(Mau instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertNhaCungCap(NhaCungCap instance);
    partial void UpdateNhaCungCap(NhaCungCap instance);
    partial void DeleteNhaCungCap(NhaCungCap instance);
    partial void InsertNhaCungCapSanPham(NhaCungCapSanPham instance);
    partial void UpdateNhaCungCapSanPham(NhaCungCapSanPham instance);
    partial void DeleteNhaCungCapSanPham(NhaCungCapSanPham instance);
    partial void InsertNhomNguoiDung(NhomNguoiDung instance);
    partial void UpdateNhomNguoiDung(NhomNguoiDung instance);
    partial void DeleteNhomNguoiDung(NhomNguoiDung instance);
    partial void InsertPhanHoi(PhanHoi instance);
    partial void UpdatePhanHoi(PhanHoi instance);
    partial void DeletePhanHoi(PhanHoi instance);
    partial void InsertPhanQuyen(PhanQuyen instance);
    partial void UpdatePhanQuyen(PhanQuyen instance);
    partial void DeletePhanQuyen(PhanQuyen instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertSize(Size instance);
    partial void UpdateSize(Size instance);
    partial void DeleteSize(Size instance);
    #endregion
		
		public DoAnKetMon_UDTMDataContext() : 
				base(global::DTO.Properties.Settings.Default.DoAnKetMon_UDTMConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DoAnKetMon_UDTMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoAnKetMon_UDTMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoAnKetMon_UDTMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoAnKetMon_UDTMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this.GetTable<ChiTietDonHang>();
			}
		}
		
		public System.Data.Linq.Table<ThongTinGiaoHang> ThongTinGiaoHangs
		{
			get
			{
				return this.GetTable<ThongTinGiaoHang>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietKhuyenMai> ChiTietKhuyenMais
		{
			get
			{
				return this.GetTable<ChiTietKhuyenMai>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietSanPham> ChiTietSanPhams
		{
			get
			{
				return this.GetTable<ChiTietSanPham>();
			}
		}
		
		public System.Data.Linq.Table<DanhMuc> DanhMucs
		{
			get
			{
				return this.GetTable<DanhMuc>();
			}
		}
		
		public System.Data.Linq.Table<DonHang> DonHangs
		{
			get
			{
				return this.GetTable<DonHang>();
			}
		}
		
		public System.Data.Linq.Table<GioHang> GioHangs
		{
			get
			{
				return this.GetTable<GioHang>();
			}
		}
		
		public System.Data.Linq.Table<KhuyenMai> KhuyenMais
		{
			get
			{
				return this.GetTable<KhuyenMai>();
			}
		}
		
		public System.Data.Linq.Table<ManHinh> ManHinhs
		{
			get
			{
				return this.GetTable<ManHinh>();
			}
		}
		
		public System.Data.Linq.Table<Mau> Maus
		{
			get
			{
				return this.GetTable<Mau>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<NhaCungCap> NhaCungCaps
		{
			get
			{
				return this.GetTable<NhaCungCap>();
			}
		}
		
		public System.Data.Linq.Table<NhaCungCapSanPham> NhaCungCapSanPhams
		{
			get
			{
				return this.GetTable<NhaCungCapSanPham>();
			}
		}
		
		public System.Data.Linq.Table<NhomNguoiDung> NhomNguoiDungs
		{
			get
			{
				return this.GetTable<NhomNguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<PhanHoi> PhanHois
		{
			get
			{
				return this.GetTable<PhanHoi>();
			}
		}
		
		public System.Data.Linq.Table<PhanQuyen> PhanQuyens
		{
			get
			{
				return this.GetTable<PhanQuyen>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<Size> Sizes
		{
			get
			{
				return this.GetTable<Size>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDonHang")]
	public partial class ChiTietDonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChiTietDonHangID;
		
		private int _DonHangID;
		
		private int _SanPhamID;
		
		private int _SoLuong;
		
		private decimal _DonGia;
		
		private System.Nullable<int> _TinhTrangDanhGia;
		
		private EntityRef<ChiTietSanPham> _ChiTietSanPham;
		
		private EntityRef<DonHang> _DonHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChiTietDonHangIDChanging(int value);
    partial void OnChiTietDonHangIDChanged();
    partial void OnDonHangIDChanging(int value);
    partial void OnDonHangIDChanged();
    partial void OnSanPhamIDChanging(int value);
    partial void OnSanPhamIDChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(decimal value);
    partial void OnDonGiaChanged();
    partial void OnTinhTrangDanhGiaChanging(System.Nullable<int> value);
    partial void OnTinhTrangDanhGiaChanged();
    #endregion
		
		public ChiTietDonHang()
		{
			this._ChiTietSanPham = default(EntityRef<ChiTietSanPham>);
			this._DonHang = default(EntityRef<DonHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiTietDonHangID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChiTietDonHangID
		{
			get
			{
				return this._ChiTietDonHangID;
			}
			set
			{
				if ((this._ChiTietDonHangID != value))
				{
					this.OnChiTietDonHangIDChanging(value);
					this.SendPropertyChanging();
					this._ChiTietDonHangID = value;
					this.SendPropertyChanged("ChiTietDonHangID");
					this.OnChiTietDonHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonHangID", DbType="Int NOT NULL")]
		public int DonHangID
		{
			get
			{
				return this._DonHangID;
			}
			set
			{
				if ((this._DonHangID != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonHangIDChanging(value);
					this.SendPropertyChanging();
					this._DonHangID = value;
					this.SendPropertyChanged("DonHangID");
					this.OnDonHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamID", DbType="Int NOT NULL")]
		public int SanPhamID
		{
			get
			{
				return this._SanPhamID;
			}
			set
			{
				if ((this._SanPhamID != value))
				{
					if (this._ChiTietSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPhamIDChanging(value);
					this.SendPropertyChanging();
					this._SanPhamID = value;
					this.SendPropertyChanged("SanPhamID");
					this.OnSanPhamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Decimal(18,2) NOT NULL")]
		public decimal DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangDanhGia", DbType="Int")]
		public System.Nullable<int> TinhTrangDanhGia
		{
			get
			{
				return this._TinhTrangDanhGia;
			}
			set
			{
				if ((this._TinhTrangDanhGia != value))
				{
					this.OnTinhTrangDanhGiaChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangDanhGia = value;
					this.SendPropertyChanged("TinhTrangDanhGia");
					this.OnTinhTrangDanhGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiTietSanPham_ChiTietDonHang", Storage="_ChiTietSanPham", ThisKey="SanPhamID", OtherKey="ChiTietID", IsForeignKey=true)]
		public ChiTietSanPham ChiTietSanPham
		{
			get
			{
				return this._ChiTietSanPham.Entity;
			}
			set
			{
				ChiTietSanPham previousValue = this._ChiTietSanPham.Entity;
				if (((previousValue != value) 
							|| (this._ChiTietSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChiTietSanPham.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._ChiTietSanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._SanPhamID = value.ChiTietID;
					}
					else
					{
						this._SanPhamID = default(int);
					}
					this.SendPropertyChanged("ChiTietSanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_DonHang", ThisKey="DonHangID", OtherKey="DonHangID", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._DonHangID = value.DonHangID;
					}
					else
					{
						this._DonHangID = default(int);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThongTinGiaoHang")]
	public partial class ThongTinGiaoHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiaChiID;
		
		private int _NguoiDungID;
		
		private string _TenNguoiNhan;
		
		private string _SoDienThoai;
		
		private string _DiaChiGiaoHang;
		
		private System.Nullable<bool> _DiaChiMacDinh;
		
		private EntitySet<DonHang> _DonHangs;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiaChiIDChanging(int value);
    partial void OnDiaChiIDChanged();
    partial void OnNguoiDungIDChanging(int value);
    partial void OnNguoiDungIDChanged();
    partial void OnTenNguoiNhanChanging(string value);
    partial void OnTenNguoiNhanChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnDiaChiGiaoHangChanging(string value);
    partial void OnDiaChiGiaoHangChanged();
    partial void OnDiaChiMacDinhChanging(System.Nullable<bool> value);
    partial void OnDiaChiMacDinhChanged();
    #endregion
		
		public ThongTinGiaoHang()
		{
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DiaChiID
		{
			get
			{
				return this._DiaChiID;
			}
			set
			{
				if ((this._DiaChiID != value))
				{
					this.OnDiaChiIDChanging(value);
					this.SendPropertyChanging();
					this._DiaChiID = value;
					this.SendPropertyChanged("DiaChiID");
					this.OnDiaChiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiDungID", DbType="Int NOT NULL")]
		public int NguoiDungID
		{
			get
			{
				return this._NguoiDungID;
			}
			set
			{
				if ((this._NguoiDungID != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNguoiDungIDChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungID = value;
					this.SendPropertyChanged("NguoiDungID");
					this.OnNguoiDungIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNguoiNhan", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenNguoiNhan
		{
			get
			{
				return this._TenNguoiNhan;
			}
			set
			{
				if ((this._TenNguoiNhan != value))
				{
					this.OnTenNguoiNhanChanging(value);
					this.SendPropertyChanging();
					this._TenNguoiNhan = value;
					this.SendPropertyChanged("TenNguoiNhan");
					this.OnTenNguoiNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiGiaoHang", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DiaChiGiaoHang
		{
			get
			{
				return this._DiaChiGiaoHang;
			}
			set
			{
				if ((this._DiaChiGiaoHang != value))
				{
					this.OnDiaChiGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._DiaChiGiaoHang = value;
					this.SendPropertyChanged("DiaChiGiaoHang");
					this.OnDiaChiGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiMacDinh", DbType="Bit")]
		public System.Nullable<bool> DiaChiMacDinh
		{
			get
			{
				return this._DiaChiMacDinh;
			}
			set
			{
				if ((this._DiaChiMacDinh != value))
				{
					this.OnDiaChiMacDinhChanging(value);
					this.SendPropertyChanging();
					this._DiaChiMacDinh = value;
					this.SendPropertyChanged("DiaChiMacDinh");
					this.OnDiaChiMacDinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThongTinGiaoHang_DonHang", Storage="_DonHangs", ThisKey="DiaChiID", OtherKey="DiaChiID")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_ThongTinGiaoHang", Storage="_NguoiDung", ThisKey="NguoiDungID", OtherKey="NguoiDungID", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.ThongTinGiaoHangs.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.ThongTinGiaoHangs.Add(this);
						this._NguoiDungID = value.NguoiDungID;
					}
					else
					{
						this._NguoiDungID = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinGiaoHang = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinGiaoHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietKhuyenMai")]
	public partial class ChiTietKhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChiTietKhuyenMaiID;
		
		private System.Nullable<int> _SanPhamID;
		
		private System.Nullable<int> _KhuyenMaiID;
		
		private System.Nullable<bool> _DaHetHan;
		
		private EntityRef<KhuyenMai> _KhuyenMai;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChiTietKhuyenMaiIDChanging(int value);
    partial void OnChiTietKhuyenMaiIDChanged();
    partial void OnSanPhamIDChanging(System.Nullable<int> value);
    partial void OnSanPhamIDChanged();
    partial void OnKhuyenMaiIDChanging(System.Nullable<int> value);
    partial void OnKhuyenMaiIDChanged();
    partial void OnDaHetHanChanging(System.Nullable<bool> value);
    partial void OnDaHetHanChanged();
    #endregion
		
		public ChiTietKhuyenMai()
		{
			this._KhuyenMai = default(EntityRef<KhuyenMai>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiTietKhuyenMaiID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChiTietKhuyenMaiID
		{
			get
			{
				return this._ChiTietKhuyenMaiID;
			}
			set
			{
				if ((this._ChiTietKhuyenMaiID != value))
				{
					this.OnChiTietKhuyenMaiIDChanging(value);
					this.SendPropertyChanging();
					this._ChiTietKhuyenMaiID = value;
					this.SendPropertyChanged("ChiTietKhuyenMaiID");
					this.OnChiTietKhuyenMaiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamID", DbType="Int")]
		public System.Nullable<int> SanPhamID
		{
			get
			{
				return this._SanPhamID;
			}
			set
			{
				if ((this._SanPhamID != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPhamIDChanging(value);
					this.SendPropertyChanging();
					this._SanPhamID = value;
					this.SendPropertyChanged("SanPhamID");
					this.OnSanPhamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhuyenMaiID", DbType="Int")]
		public System.Nullable<int> KhuyenMaiID
		{
			get
			{
				return this._KhuyenMaiID;
			}
			set
			{
				if ((this._KhuyenMaiID != value))
				{
					if (this._KhuyenMai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhuyenMaiIDChanging(value);
					this.SendPropertyChanging();
					this._KhuyenMaiID = value;
					this.SendPropertyChanged("KhuyenMaiID");
					this.OnKhuyenMaiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaHetHan", DbType="Bit")]
		public System.Nullable<bool> DaHetHan
		{
			get
			{
				return this._DaHetHan;
			}
			set
			{
				if ((this._DaHetHan != value))
				{
					this.OnDaHetHanChanging(value);
					this.SendPropertyChanging();
					this._DaHetHan = value;
					this.SendPropertyChanged("DaHetHan");
					this.OnDaHetHanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuyenMai_ChiTietKhuyenMai", Storage="_KhuyenMai", ThisKey="KhuyenMaiID", OtherKey="MaKhuyenMai", IsForeignKey=true)]
		public KhuyenMai KhuyenMai
		{
			get
			{
				return this._KhuyenMai.Entity;
			}
			set
			{
				KhuyenMai previousValue = this._KhuyenMai.Entity;
				if (((previousValue != value) 
							|| (this._KhuyenMai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhuyenMai.Entity = null;
						previousValue.ChiTietKhuyenMais.Remove(this);
					}
					this._KhuyenMai.Entity = value;
					if ((value != null))
					{
						value.ChiTietKhuyenMais.Add(this);
						this._KhuyenMaiID = value.MaKhuyenMai;
					}
					else
					{
						this._KhuyenMaiID = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhuyenMai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietKhuyenMai", Storage="_SanPham", ThisKey="SanPhamID", OtherKey="SanPhamID", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietKhuyenMais.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietKhuyenMais.Add(this);
						this._SanPhamID = value.SanPhamID;
					}
					else
					{
						this._SanPhamID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietSanPham")]
	public partial class ChiTietSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChiTietID;
		
		private int _SanPhamID;
		
		private int _MauID;
		
		private int _SizeID;
		
		private decimal _Gia;
		
		private System.Nullable<decimal> _GiaDuocGiam;
		
		private string _HinhAnhUrl;
		
		private int _SoLuongTonKho;
		
		private System.Nullable<bool> _KichHoat;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
		private EntitySet<GioHang> _GioHangs;
		
		private EntityRef<Mau> _Mau;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<Size> _Size;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChiTietIDChanging(int value);
    partial void OnChiTietIDChanged();
    partial void OnSanPhamIDChanging(int value);
    partial void OnSanPhamIDChanged();
    partial void OnMauIDChanging(int value);
    partial void OnMauIDChanged();
    partial void OnSizeIDChanging(int value);
    partial void OnSizeIDChanged();
    partial void OnGiaChanging(decimal value);
    partial void OnGiaChanged();
    partial void OnGiaDuocGiamChanging(System.Nullable<decimal> value);
    partial void OnGiaDuocGiamChanged();
    partial void OnHinhAnhUrlChanging(string value);
    partial void OnHinhAnhUrlChanged();
    partial void OnSoLuongTonKhoChanging(int value);
    partial void OnSoLuongTonKhoChanged();
    partial void OnKichHoatChanging(System.Nullable<bool> value);
    partial void OnKichHoatChanged();
    #endregion
		
		public ChiTietSanPham()
		{
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			this._GioHangs = new EntitySet<GioHang>(new Action<GioHang>(this.attach_GioHangs), new Action<GioHang>(this.detach_GioHangs));
			this._Mau = default(EntityRef<Mau>);
			this._SanPham = default(EntityRef<SanPham>);
			this._Size = default(EntityRef<Size>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiTietID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChiTietID
		{
			get
			{
				return this._ChiTietID;
			}
			set
			{
				if ((this._ChiTietID != value))
				{
					this.OnChiTietIDChanging(value);
					this.SendPropertyChanging();
					this._ChiTietID = value;
					this.SendPropertyChanged("ChiTietID");
					this.OnChiTietIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamID", DbType="Int NOT NULL")]
		public int SanPhamID
		{
			get
			{
				return this._SanPhamID;
			}
			set
			{
				if ((this._SanPhamID != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPhamIDChanging(value);
					this.SendPropertyChanging();
					this._SanPhamID = value;
					this.SendPropertyChanged("SanPhamID");
					this.OnSanPhamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MauID", DbType="Int NOT NULL")]
		public int MauID
		{
			get
			{
				return this._MauID;
			}
			set
			{
				if ((this._MauID != value))
				{
					if (this._Mau.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMauIDChanging(value);
					this.SendPropertyChanging();
					this._MauID = value;
					this.SendPropertyChanged("MauID");
					this.OnMauIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeID", DbType="Int NOT NULL")]
		public int SizeID
		{
			get
			{
				return this._SizeID;
			}
			set
			{
				if ((this._SizeID != value))
				{
					if (this._Size.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSizeIDChanging(value);
					this.SendPropertyChanging();
					this._SizeID = value;
					this.SendPropertyChanged("SizeID");
					this.OnSizeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Decimal(18,2) NOT NULL")]
		public decimal Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaDuocGiam", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> GiaDuocGiam
		{
			get
			{
				return this._GiaDuocGiam;
			}
			set
			{
				if ((this._GiaDuocGiam != value))
				{
					this.OnGiaDuocGiamChanging(value);
					this.SendPropertyChanging();
					this._GiaDuocGiam = value;
					this.SendPropertyChanged("GiaDuocGiam");
					this.OnGiaDuocGiamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnhUrl", DbType="NVarChar(255)")]
		public string HinhAnhUrl
		{
			get
			{
				return this._HinhAnhUrl;
			}
			set
			{
				if ((this._HinhAnhUrl != value))
				{
					this.OnHinhAnhUrlChanging(value);
					this.SendPropertyChanging();
					this._HinhAnhUrl = value;
					this.SendPropertyChanged("HinhAnhUrl");
					this.OnHinhAnhUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTonKho", DbType="Int NOT NULL")]
		public int SoLuongTonKho
		{
			get
			{
				return this._SoLuongTonKho;
			}
			set
			{
				if ((this._SoLuongTonKho != value))
				{
					this.OnSoLuongTonKhoChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTonKho = value;
					this.SendPropertyChanged("SoLuongTonKho");
					this.OnSoLuongTonKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KichHoat", DbType="Bit")]
		public System.Nullable<bool> KichHoat
		{
			get
			{
				return this._KichHoat;
			}
			set
			{
				if ((this._KichHoat != value))
				{
					this.OnKichHoatChanging(value);
					this.SendPropertyChanging();
					this._KichHoat = value;
					this.SendPropertyChanged("KichHoat");
					this.OnKichHoatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiTietSanPham_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="ChiTietID", OtherKey="SanPhamID")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiTietSanPham_GioHang", Storage="_GioHangs", ThisKey="ChiTietID", OtherKey="SanPhamID")]
		public EntitySet<GioHang> GioHangs
		{
			get
			{
				return this._GioHangs;
			}
			set
			{
				this._GioHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mau_ChiTietSanPham", Storage="_Mau", ThisKey="MauID", OtherKey="MauID", IsForeignKey=true)]
		public Mau Mau
		{
			get
			{
				return this._Mau.Entity;
			}
			set
			{
				Mau previousValue = this._Mau.Entity;
				if (((previousValue != value) 
							|| (this._Mau.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mau.Entity = null;
						previousValue.ChiTietSanPhams.Remove(this);
					}
					this._Mau.Entity = value;
					if ((value != null))
					{
						value.ChiTietSanPhams.Add(this);
						this._MauID = value.MauID;
					}
					else
					{
						this._MauID = default(int);
					}
					this.SendPropertyChanged("Mau");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietSanPham", Storage="_SanPham", ThisKey="SanPhamID", OtherKey="SanPhamID", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietSanPhams.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietSanPhams.Add(this);
						this._SanPhamID = value.SanPhamID;
					}
					else
					{
						this._SanPhamID = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Size_ChiTietSanPham", Storage="_Size", ThisKey="SizeID", OtherKey="SizeID", IsForeignKey=true)]
		public Size Size
		{
			get
			{
				return this._Size.Entity;
			}
			set
			{
				Size previousValue = this._Size.Entity;
				if (((previousValue != value) 
							|| (this._Size.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Size.Entity = null;
						previousValue.ChiTietSanPhams.Remove(this);
					}
					this._Size.Entity = value;
					if ((value != null))
					{
						value.ChiTietSanPhams.Add(this);
						this._SizeID = value.SizeID;
					}
					else
					{
						this._SizeID = default(int);
					}
					this.SendPropertyChanged("Size");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.ChiTietSanPham = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.ChiTietSanPham = null;
		}
		
		private void attach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.ChiTietSanPham = this;
		}
		
		private void detach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.ChiTietSanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc")]
	public partial class DanhMuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DanhMucID;
		
		private string _TenDanhMuc;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDanhMucIDChanging(int value);
    partial void OnDanhMucIDChanged();
    partial void OnTenDanhMucChanging(string value);
    partial void OnTenDanhMucChanged();
    #endregion
		
		public DanhMuc()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanhMucID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DanhMucID
		{
			get
			{
				return this._DanhMucID;
			}
			set
			{
				if ((this._DanhMucID != value))
				{
					this.OnDanhMucIDChanging(value);
					this.SendPropertyChanging();
					this._DanhMucID = value;
					this.SendPropertyChanged("DanhMucID");
					this.OnDanhMucIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDanhMuc", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenDanhMuc
		{
			get
			{
				return this._TenDanhMuc;
			}
			set
			{
				if ((this._TenDanhMuc != value))
				{
					this.OnTenDanhMucChanging(value);
					this.SendPropertyChanging();
					this._TenDanhMuc = value;
					this.SendPropertyChanged("TenDanhMuc");
					this.OnTenDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_SanPham", Storage="_SanPhams", ThisKey="DanhMucID", OtherKey="DanhMucID")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
	public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DonHangID;
		
		private System.Nullable<int> _DiaChiID;
		
		private System.Nullable<int> _NhanVienID;
		
		private int _NguoiDungID;
		
		private decimal _TongTien;
		
		private string _TinhTrangDonHang;
		
		private System.Nullable<System.DateTime> _NgayDatHang;
		
		private string _HinhThucThanhToan;
		
		private string _TinhTrangThanhToan;
		
		private System.Nullable<System.DateTime> _NgayThanhToan;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
		private EntityRef<ThongTinGiaoHang> _ThongTinGiaoHang;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
		private EntityRef<NguoiDung> _NguoiDung1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDonHangIDChanging(int value);
    partial void OnDonHangIDChanged();
    partial void OnDiaChiIDChanging(System.Nullable<int> value);
    partial void OnDiaChiIDChanged();
    partial void OnNhanVienIDChanging(System.Nullable<int> value);
    partial void OnNhanVienIDChanged();
    partial void OnNguoiDungIDChanging(int value);
    partial void OnNguoiDungIDChanged();
    partial void OnTongTienChanging(decimal value);
    partial void OnTongTienChanged();
    partial void OnTinhTrangDonHangChanging(string value);
    partial void OnTinhTrangDonHangChanged();
    partial void OnNgayDatHangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatHangChanged();
    partial void OnHinhThucThanhToanChanging(string value);
    partial void OnHinhThucThanhToanChanged();
    partial void OnTinhTrangThanhToanChanging(string value);
    partial void OnTinhTrangThanhToanChanged();
    partial void OnNgayThanhToanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThanhToanChanged();
    #endregion
		
		public DonHang()
		{
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			this._ThongTinGiaoHang = default(EntityRef<ThongTinGiaoHang>);
			this._NguoiDung = default(EntityRef<NguoiDung>);
			this._NguoiDung1 = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonHangID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DonHangID
		{
			get
			{
				return this._DonHangID;
			}
			set
			{
				if ((this._DonHangID != value))
				{
					this.OnDonHangIDChanging(value);
					this.SendPropertyChanging();
					this._DonHangID = value;
					this.SendPropertyChanged("DonHangID");
					this.OnDonHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiID", DbType="Int")]
		public System.Nullable<int> DiaChiID
		{
			get
			{
				return this._DiaChiID;
			}
			set
			{
				if ((this._DiaChiID != value))
				{
					if (this._ThongTinGiaoHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiaChiIDChanging(value);
					this.SendPropertyChanging();
					this._DiaChiID = value;
					this.SendPropertyChanged("DiaChiID");
					this.OnDiaChiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhanVienID", DbType="Int")]
		public System.Nullable<int> NhanVienID
		{
			get
			{
				return this._NhanVienID;
			}
			set
			{
				if ((this._NhanVienID != value))
				{
					if (this._NguoiDung1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhanVienIDChanging(value);
					this.SendPropertyChanging();
					this._NhanVienID = value;
					this.SendPropertyChanged("NhanVienID");
					this.OnNhanVienIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiDungID", DbType="Int NOT NULL")]
		public int NguoiDungID
		{
			get
			{
				return this._NguoiDungID;
			}
			set
			{
				if ((this._NguoiDungID != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNguoiDungIDChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungID = value;
					this.SendPropertyChanged("NguoiDungID");
					this.OnNguoiDungIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Decimal(18,2) NOT NULL")]
		public decimal TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangDonHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TinhTrangDonHang
		{
			get
			{
				return this._TinhTrangDonHang;
			}
			set
			{
				if ((this._TinhTrangDonHang != value))
				{
					this.OnTinhTrangDonHangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangDonHang = value;
					this.SendPropertyChanged("TinhTrangDonHang");
					this.OnTinhTrangDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDatHang", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDatHang
		{
			get
			{
				return this._NgayDatHang;
			}
			set
			{
				if ((this._NgayDatHang != value))
				{
					this.OnNgayDatHangChanging(value);
					this.SendPropertyChanging();
					this._NgayDatHang = value;
					this.SendPropertyChanged("NgayDatHang");
					this.OnNgayDatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhThucThanhToan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HinhThucThanhToan
		{
			get
			{
				return this._HinhThucThanhToan;
			}
			set
			{
				if ((this._HinhThucThanhToan != value))
				{
					this.OnHinhThucThanhToanChanging(value);
					this.SendPropertyChanging();
					this._HinhThucThanhToan = value;
					this.SendPropertyChanged("HinhThucThanhToan");
					this.OnHinhThucThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangThanhToan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TinhTrangThanhToan
		{
			get
			{
				return this._TinhTrangThanhToan;
			}
			set
			{
				if ((this._TinhTrangThanhToan != value))
				{
					this.OnTinhTrangThanhToanChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangThanhToan = value;
					this.SendPropertyChanged("TinhTrangThanhToan");
					this.OnTinhTrangThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThanhToan", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayThanhToan
		{
			get
			{
				return this._NgayThanhToan;
			}
			set
			{
				if ((this._NgayThanhToan != value))
				{
					this.OnNgayThanhToanChanging(value);
					this.SendPropertyChanging();
					this._NgayThanhToan = value;
					this.SendPropertyChanged("NgayThanhToan");
					this.OnNgayThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="DonHangID", OtherKey="DonHangID")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThongTinGiaoHang_DonHang", Storage="_ThongTinGiaoHang", ThisKey="DiaChiID", OtherKey="DiaChiID", IsForeignKey=true)]
		public ThongTinGiaoHang ThongTinGiaoHang
		{
			get
			{
				return this._ThongTinGiaoHang.Entity;
			}
			set
			{
				ThongTinGiaoHang previousValue = this._ThongTinGiaoHang.Entity;
				if (((previousValue != value) 
							|| (this._ThongTinGiaoHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThongTinGiaoHang.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._ThongTinGiaoHang.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._DiaChiID = value.DiaChiID;
					}
					else
					{
						this._DiaChiID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThongTinGiaoHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_DonHang", Storage="_NguoiDung", ThisKey="NguoiDungID", OtherKey="NguoiDungID", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._NguoiDungID = value.NguoiDungID;
					}
					else
					{
						this._NguoiDungID = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_DonHang1", Storage="_NguoiDung1", ThisKey="NhanVienID", OtherKey="NguoiDungID", IsForeignKey=true)]
		public NguoiDung NguoiDung1
		{
			get
			{
				return this._NguoiDung1.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung1.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung1.Entity = null;
						previousValue.DonHangs1.Remove(this);
					}
					this._NguoiDung1.Entity = value;
					if ((value != null))
					{
						value.DonHangs1.Add(this);
						this._NhanVienID = value.NguoiDungID;
					}
					else
					{
						this._NhanVienID = default(Nullable<int>);
					}
					this.SendPropertyChanged("NguoiDung1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GioHang")]
	public partial class GioHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GioHangID;
		
		private int _NguoiDungID;
		
		private int _SanPhamID;
		
		private int _SoLuong;
		
		private EntityRef<ChiTietSanPham> _ChiTietSanPham;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGioHangIDChanging(int value);
    partial void OnGioHangIDChanged();
    partial void OnNguoiDungIDChanging(int value);
    partial void OnNguoiDungIDChanged();
    partial void OnSanPhamIDChanging(int value);
    partial void OnSanPhamIDChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    #endregion
		
		public GioHang()
		{
			this._ChiTietSanPham = default(EntityRef<ChiTietSanPham>);
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioHangID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GioHangID
		{
			get
			{
				return this._GioHangID;
			}
			set
			{
				if ((this._GioHangID != value))
				{
					this.OnGioHangIDChanging(value);
					this.SendPropertyChanging();
					this._GioHangID = value;
					this.SendPropertyChanged("GioHangID");
					this.OnGioHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiDungID", DbType="Int NOT NULL")]
		public int NguoiDungID
		{
			get
			{
				return this._NguoiDungID;
			}
			set
			{
				if ((this._NguoiDungID != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNguoiDungIDChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungID = value;
					this.SendPropertyChanged("NguoiDungID");
					this.OnNguoiDungIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamID", DbType="Int NOT NULL")]
		public int SanPhamID
		{
			get
			{
				return this._SanPhamID;
			}
			set
			{
				if ((this._SanPhamID != value))
				{
					if (this._ChiTietSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPhamIDChanging(value);
					this.SendPropertyChanging();
					this._SanPhamID = value;
					this.SendPropertyChanged("SanPhamID");
					this.OnSanPhamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiTietSanPham_GioHang", Storage="_ChiTietSanPham", ThisKey="SanPhamID", OtherKey="ChiTietID", IsForeignKey=true)]
		public ChiTietSanPham ChiTietSanPham
		{
			get
			{
				return this._ChiTietSanPham.Entity;
			}
			set
			{
				ChiTietSanPham previousValue = this._ChiTietSanPham.Entity;
				if (((previousValue != value) 
							|| (this._ChiTietSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChiTietSanPham.Entity = null;
						previousValue.GioHangs.Remove(this);
					}
					this._ChiTietSanPham.Entity = value;
					if ((value != null))
					{
						value.GioHangs.Add(this);
						this._SanPhamID = value.ChiTietID;
					}
					else
					{
						this._SanPhamID = default(int);
					}
					this.SendPropertyChanged("ChiTietSanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_GioHang", Storage="_NguoiDung", ThisKey="NguoiDungID", OtherKey="NguoiDungID", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.GioHangs.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.GioHangs.Add(this);
						this._NguoiDungID = value.NguoiDungID;
					}
					else
					{
						this._NguoiDungID = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhuyenMai")]
	public partial class KhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKhuyenMai;
		
		private string _TenChuongTrinhKM;
		
		private System.Nullable<int> _MucGiam;
		
		private string _MoTa;
		
		private System.Nullable<System.DateTime> _NgayBatDau;
		
		private System.Nullable<System.DateTime> _NgayKetThuc;
		
		private EntitySet<ChiTietKhuyenMai> _ChiTietKhuyenMais;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhuyenMaiChanging(int value);
    partial void OnMaKhuyenMaiChanged();
    partial void OnTenChuongTrinhKMChanging(string value);
    partial void OnTenChuongTrinhKMChanged();
    partial void OnMucGiamChanging(System.Nullable<int> value);
    partial void OnMucGiamChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnNgayBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKetThucChanged();
    #endregion
		
		public KhuyenMai()
		{
			this._ChiTietKhuyenMais = new EntitySet<ChiTietKhuyenMai>(new Action<ChiTietKhuyenMai>(this.attach_ChiTietKhuyenMais), new Action<ChiTietKhuyenMai>(this.detach_ChiTietKhuyenMais));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhuyenMai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKhuyenMai
		{
			get
			{
				return this._MaKhuyenMai;
			}
			set
			{
				if ((this._MaKhuyenMai != value))
				{
					this.OnMaKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._MaKhuyenMai = value;
					this.SendPropertyChanged("MaKhuyenMai");
					this.OnMaKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChuongTrinhKM", DbType="NVarChar(100)")]
		public string TenChuongTrinhKM
		{
			get
			{
				return this._TenChuongTrinhKM;
			}
			set
			{
				if ((this._TenChuongTrinhKM != value))
				{
					this.OnTenChuongTrinhKMChanging(value);
					this.SendPropertyChanging();
					this._TenChuongTrinhKM = value;
					this.SendPropertyChanged("TenChuongTrinhKM");
					this.OnTenChuongTrinhKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MucGiam", DbType="Int")]
		public System.Nullable<int> MucGiam
		{
			get
			{
				return this._MucGiam;
			}
			set
			{
				if ((this._MucGiam != value))
				{
					this.OnMucGiamChanging(value);
					this.SendPropertyChanging();
					this._MucGiam = value;
					this.SendPropertyChanged("MucGiam");
					this.OnMucGiamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(255)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuyenMai_ChiTietKhuyenMai", Storage="_ChiTietKhuyenMais", ThisKey="MaKhuyenMai", OtherKey="KhuyenMaiID")]
		public EntitySet<ChiTietKhuyenMai> ChiTietKhuyenMais
		{
			get
			{
				return this._ChiTietKhuyenMais;
			}
			set
			{
				this._ChiTietKhuyenMais.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietKhuyenMais(ChiTietKhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.KhuyenMai = this;
		}
		
		private void detach_ChiTietKhuyenMais(ChiTietKhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.KhuyenMai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ManHinh")]
	public partial class ManHinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaManHinh;
		
		private string _TenManHinh;
		
		private EntitySet<PhanQuyen> _PhanQuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaManHinhChanging(string value);
    partial void OnMaManHinhChanged();
    partial void OnTenManHinhChanging(string value);
    partial void OnTenManHinhChanged();
    #endregion
		
		public ManHinh()
		{
			this._PhanQuyens = new EntitySet<PhanQuyen>(new Action<PhanQuyen>(this.attach_PhanQuyens), new Action<PhanQuyen>(this.detach_PhanQuyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaManHinh", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaManHinh
		{
			get
			{
				return this._MaManHinh;
			}
			set
			{
				if ((this._MaManHinh != value))
				{
					this.OnMaManHinhChanging(value);
					this.SendPropertyChanging();
					this._MaManHinh = value;
					this.SendPropertyChanged("MaManHinh");
					this.OnMaManHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenManHinh", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenManHinh
		{
			get
			{
				return this._TenManHinh;
			}
			set
			{
				if ((this._TenManHinh != value))
				{
					this.OnTenManHinhChanging(value);
					this.SendPropertyChanging();
					this._TenManHinh = value;
					this.SendPropertyChanged("TenManHinh");
					this.OnTenManHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ManHinh_PhanQuyen", Storage="_PhanQuyens", ThisKey="MaManHinh", OtherKey="MaManHinh")]
		public EntitySet<PhanQuyen> PhanQuyens
		{
			get
			{
				return this._PhanQuyens;
			}
			set
			{
				this._PhanQuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.ManHinh = this;
		}
		
		private void detach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.ManHinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mau")]
	public partial class Mau : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MauID;
		
		private string _TenMau;
		
		private EntitySet<ChiTietSanPham> _ChiTietSanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMauIDChanging(int value);
    partial void OnMauIDChanged();
    partial void OnTenMauChanging(string value);
    partial void OnTenMauChanged();
    #endregion
		
		public Mau()
		{
			this._ChiTietSanPhams = new EntitySet<ChiTietSanPham>(new Action<ChiTietSanPham>(this.attach_ChiTietSanPhams), new Action<ChiTietSanPham>(this.detach_ChiTietSanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MauID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MauID
		{
			get
			{
				return this._MauID;
			}
			set
			{
				if ((this._MauID != value))
				{
					this.OnMauIDChanging(value);
					this.SendPropertyChanging();
					this._MauID = value;
					this.SendPropertyChanged("MauID");
					this.OnMauIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMau", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenMau
		{
			get
			{
				return this._TenMau;
			}
			set
			{
				if ((this._TenMau != value))
				{
					this.OnTenMauChanging(value);
					this.SendPropertyChanging();
					this._TenMau = value;
					this.SendPropertyChanged("TenMau");
					this.OnTenMauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mau_ChiTietSanPham", Storage="_ChiTietSanPhams", ThisKey="MauID", OtherKey="MauID")]
		public EntitySet<ChiTietSanPham> ChiTietSanPhams
		{
			get
			{
				return this._ChiTietSanPhams;
			}
			set
			{
				this._ChiTietSanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietSanPhams(ChiTietSanPham entity)
		{
			this.SendPropertyChanging();
			entity.Mau = this;
		}
		
		private void detach_ChiTietSanPhams(ChiTietSanPham entity)
		{
			this.SendPropertyChanging();
			entity.Mau = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NguoiDungID;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private string _HoTen;
		
		private string _Email;
		
		private string _SoDienThoai;
		
		private string _DiaChi;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private System.Nullable<int> _MaNhomNguoiDung;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private System.Nullable<bool> _KichHoat;
		
		private System.Nullable<bool> _Train;
		
		private System.Nullable<int> _MucChiTieu;
		
		private System.Nullable<int> _DoTuoi;
		
		private string _PhanKhucKH;
		
		private string _SoThich;
		
		private string _GioiTinh;
		
		private EntitySet<ThongTinGiaoHang> _ThongTinGiaoHangs;
		
		private EntitySet<DonHang> _DonHangs;
		
		private EntitySet<DonHang> _DonHangs1;
		
		private EntitySet<GioHang> _GioHangs;
		
		private EntitySet<PhanHoi> _PhanHois;
		
		private EntityRef<NhomNguoiDung> _NhomNguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNguoiDungIDChanging(int value);
    partial void OnNguoiDungIDChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnMaNhomNguoiDungChanging(System.Nullable<int> value);
    partial void OnMaNhomNguoiDungChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    partial void OnKichHoatChanging(System.Nullable<bool> value);
    partial void OnKichHoatChanged();
    partial void OnTrainChanging(System.Nullable<bool> value);
    partial void OnTrainChanged();
    partial void OnMucChiTieuChanging(System.Nullable<int> value);
    partial void OnMucChiTieuChanged();
    partial void OnDoTuoiChanging(System.Nullable<int> value);
    partial void OnDoTuoiChanged();
    partial void OnPhanKhucKHChanging(string value);
    partial void OnPhanKhucKHChanged();
    partial void OnSoThichChanging(string value);
    partial void OnSoThichChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    #endregion
		
		public NguoiDung()
		{
			this._ThongTinGiaoHangs = new EntitySet<ThongTinGiaoHang>(new Action<ThongTinGiaoHang>(this.attach_ThongTinGiaoHangs), new Action<ThongTinGiaoHang>(this.detach_ThongTinGiaoHangs));
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			this._DonHangs1 = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs1), new Action<DonHang>(this.detach_DonHangs1));
			this._GioHangs = new EntitySet<GioHang>(new Action<GioHang>(this.attach_GioHangs), new Action<GioHang>(this.detach_GioHangs));
			this._PhanHois = new EntitySet<PhanHoi>(new Action<PhanHoi>(this.attach_PhanHois), new Action<PhanHoi>(this.detach_PhanHois));
			this._NhomNguoiDung = default(EntityRef<NhomNguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiDungID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NguoiDungID
		{
			get
			{
				return this._NguoiDungID;
			}
			set
			{
				if ((this._NguoiDungID != value))
				{
					this.OnNguoiDungIDChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungID = value;
					this.SendPropertyChanged("NguoiDungID");
					this.OnNguoiDungIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(15)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhomNguoiDung", DbType="Int")]
		public System.Nullable<int> MaNhomNguoiDung
		{
			get
			{
				return this._MaNhomNguoiDung;
			}
			set
			{
				if ((this._MaNhomNguoiDung != value))
				{
					if (this._NhomNguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhomNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._MaNhomNguoiDung = value;
					this.SendPropertyChanged("MaNhomNguoiDung");
					this.OnMaNhomNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KichHoat", DbType="Bit")]
		public System.Nullable<bool> KichHoat
		{
			get
			{
				return this._KichHoat;
			}
			set
			{
				if ((this._KichHoat != value))
				{
					this.OnKichHoatChanging(value);
					this.SendPropertyChanging();
					this._KichHoat = value;
					this.SendPropertyChanged("KichHoat");
					this.OnKichHoatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Train", DbType="Bit")]
		public System.Nullable<bool> Train
		{
			get
			{
				return this._Train;
			}
			set
			{
				if ((this._Train != value))
				{
					this.OnTrainChanging(value);
					this.SendPropertyChanging();
					this._Train = value;
					this.SendPropertyChanged("Train");
					this.OnTrainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MucChiTieu", DbType="Int")]
		public System.Nullable<int> MucChiTieu
		{
			get
			{
				return this._MucChiTieu;
			}
			set
			{
				if ((this._MucChiTieu != value))
				{
					this.OnMucChiTieuChanging(value);
					this.SendPropertyChanging();
					this._MucChiTieu = value;
					this.SendPropertyChanged("MucChiTieu");
					this.OnMucChiTieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoTuoi", DbType="Int")]
		public System.Nullable<int> DoTuoi
		{
			get
			{
				return this._DoTuoi;
			}
			set
			{
				if ((this._DoTuoi != value))
				{
					this.OnDoTuoiChanging(value);
					this.SendPropertyChanging();
					this._DoTuoi = value;
					this.SendPropertyChanged("DoTuoi");
					this.OnDoTuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanKhucKH", DbType="NVarChar(100)")]
		public string PhanKhucKH
		{
			get
			{
				return this._PhanKhucKH;
			}
			set
			{
				if ((this._PhanKhucKH != value))
				{
					this.OnPhanKhucKHChanging(value);
					this.SendPropertyChanging();
					this._PhanKhucKH = value;
					this.SendPropertyChanged("PhanKhucKH");
					this.OnPhanKhucKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoThich", DbType="NVarChar(255)")]
		public string SoThich
		{
			get
			{
				return this._SoThich;
			}
			set
			{
				if ((this._SoThich != value))
				{
					this.OnSoThichChanging(value);
					this.SendPropertyChanging();
					this._SoThich = value;
					this.SendPropertyChanged("SoThich");
					this.OnSoThichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_ThongTinGiaoHang", Storage="_ThongTinGiaoHangs", ThisKey="NguoiDungID", OtherKey="NguoiDungID")]
		public EntitySet<ThongTinGiaoHang> ThongTinGiaoHangs
		{
			get
			{
				return this._ThongTinGiaoHangs;
			}
			set
			{
				this._ThongTinGiaoHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_DonHang", Storage="_DonHangs", ThisKey="NguoiDungID", OtherKey="NguoiDungID")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_DonHang1", Storage="_DonHangs1", ThisKey="NguoiDungID", OtherKey="NhanVienID")]
		public EntitySet<DonHang> DonHangs1
		{
			get
			{
				return this._DonHangs1;
			}
			set
			{
				this._DonHangs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_GioHang", Storage="_GioHangs", ThisKey="NguoiDungID", OtherKey="NguoiDungID")]
		public EntitySet<GioHang> GioHangs
		{
			get
			{
				return this._GioHangs;
			}
			set
			{
				this._GioHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_PhanHoi", Storage="_PhanHois", ThisKey="NguoiDungID", OtherKey="NguoiDungID")]
		public EntitySet<PhanHoi> PhanHois
		{
			get
			{
				return this._PhanHois;
			}
			set
			{
				this._PhanHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomNguoiDung_NguoiDung", Storage="_NhomNguoiDung", ThisKey="MaNhomNguoiDung", OtherKey="MaNhomNguoiDung", IsForeignKey=true)]
		public NhomNguoiDung NhomNguoiDung
		{
			get
			{
				return this._NhomNguoiDung.Entity;
			}
			set
			{
				NhomNguoiDung previousValue = this._NhomNguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NhomNguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhomNguoiDung.Entity = null;
						previousValue.NguoiDungs.Remove(this);
					}
					this._NhomNguoiDung.Entity = value;
					if ((value != null))
					{
						value.NguoiDungs.Add(this);
						this._MaNhomNguoiDung = value.MaNhomNguoiDung;
					}
					else
					{
						this._MaNhomNguoiDung = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhomNguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThongTinGiaoHangs(ThongTinGiaoHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_ThongTinGiaoHangs(ThongTinGiaoHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_DonHangs1(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung1 = this;
		}
		
		private void detach_DonHangs1(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung1 = null;
		}
		
		private void attach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_PhanHois(PhanHoi entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_PhanHois(PhanHoi entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCungCap")]
	public partial class NhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NhaCungCapID;
		
		private string _TenNhaCungCap;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private string _MoTa;
		
		private System.Nullable<System.DateTime> _NgayHopTac;
		
		private EntitySet<NhaCungCapSanPham> _NhaCungCapSanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNhaCungCapIDChanging(int value);
    partial void OnNhaCungCapIDChanged();
    partial void OnTenNhaCungCapChanging(string value);
    partial void OnTenNhaCungCapChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnNgayHopTacChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHopTacChanged();
    #endregion
		
		public NhaCungCap()
		{
			this._NhaCungCapSanPhams = new EntitySet<NhaCungCapSanPham>(new Action<NhaCungCapSanPham>(this.attach_NhaCungCapSanPhams), new Action<NhaCungCapSanPham>(this.detach_NhaCungCapSanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhaCungCapID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NhaCungCapID
		{
			get
			{
				return this._NhaCungCapID;
			}
			set
			{
				if ((this._NhaCungCapID != value))
				{
					this.OnNhaCungCapIDChanging(value);
					this.SendPropertyChanging();
					this._NhaCungCapID = value;
					this.SendPropertyChanged("NhaCungCapID");
					this.OnNhaCungCapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhaCungCap", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenNhaCungCap
		{
			get
			{
				return this._TenNhaCungCap;
			}
			set
			{
				if ((this._TenNhaCungCap != value))
				{
					this.OnTenNhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._TenNhaCungCap = value;
					this.SendPropertyChanged("TenNhaCungCap");
					this.OnTenNhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(15)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(MAX)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHopTac", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayHopTac
		{
			get
			{
				return this._NgayHopTac;
			}
			set
			{
				if ((this._NgayHopTac != value))
				{
					this.OnNgayHopTacChanging(value);
					this.SendPropertyChanging();
					this._NgayHopTac = value;
					this.SendPropertyChanged("NgayHopTac");
					this.OnNgayHopTacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_NhaCungCapSanPham", Storage="_NhaCungCapSanPhams", ThisKey="NhaCungCapID", OtherKey="NhaCungCapID")]
		public EntitySet<NhaCungCapSanPham> NhaCungCapSanPhams
		{
			get
			{
				return this._NhaCungCapSanPhams;
			}
			set
			{
				this._NhaCungCapSanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhaCungCapSanPhams(NhaCungCapSanPham entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = this;
		}
		
		private void detach_NhaCungCapSanPhams(NhaCungCapSanPham entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCungCapSanPham")]
	public partial class NhaCungCapSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NhaCungCapID;
		
		private int _SanPhamID;
		
		private EntityRef<NhaCungCap> _NhaCungCap;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNhaCungCapIDChanging(int value);
    partial void OnNhaCungCapIDChanged();
    partial void OnSanPhamIDChanging(int value);
    partial void OnSanPhamIDChanged();
    #endregion
		
		public NhaCungCapSanPham()
		{
			this._NhaCungCap = default(EntityRef<NhaCungCap>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhaCungCapID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NhaCungCapID
		{
			get
			{
				return this._NhaCungCapID;
			}
			set
			{
				if ((this._NhaCungCapID != value))
				{
					if (this._NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhaCungCapIDChanging(value);
					this.SendPropertyChanging();
					this._NhaCungCapID = value;
					this.SendPropertyChanged("NhaCungCapID");
					this.OnNhaCungCapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SanPhamID
		{
			get
			{
				return this._SanPhamID;
			}
			set
			{
				if ((this._SanPhamID != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPhamIDChanging(value);
					this.SendPropertyChanging();
					this._SanPhamID = value;
					this.SendPropertyChanged("SanPhamID");
					this.OnSanPhamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_NhaCungCapSanPham", Storage="_NhaCungCap", ThisKey="NhaCungCapID", OtherKey="NhaCungCapID", IsForeignKey=true)]
		public NhaCungCap NhaCungCap
		{
			get
			{
				return this._NhaCungCap.Entity;
			}
			set
			{
				NhaCungCap previousValue = this._NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCap.Entity = null;
						previousValue.NhaCungCapSanPhams.Remove(this);
					}
					this._NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.NhaCungCapSanPhams.Add(this);
						this._NhaCungCapID = value.NhaCungCapID;
					}
					else
					{
						this._NhaCungCapID = default(int);
					}
					this.SendPropertyChanged("NhaCungCap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_NhaCungCapSanPham", Storage="_SanPham", ThisKey="SanPhamID", OtherKey="SanPhamID", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.NhaCungCapSanPhams.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.NhaCungCapSanPhams.Add(this);
						this._SanPhamID = value.SanPhamID;
					}
					else
					{
						this._SanPhamID = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhomNguoiDung")]
	public partial class NhomNguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNhomNguoiDung;
		
		private string _TenNhomNguoiDung;
		
		private EntitySet<NguoiDung> _NguoiDungs;
		
		private EntitySet<PhanQuyen> _PhanQuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhomNguoiDungChanging(int value);
    partial void OnMaNhomNguoiDungChanged();
    partial void OnTenNhomNguoiDungChanging(string value);
    partial void OnTenNhomNguoiDungChanged();
    #endregion
		
		public NhomNguoiDung()
		{
			this._NguoiDungs = new EntitySet<NguoiDung>(new Action<NguoiDung>(this.attach_NguoiDungs), new Action<NguoiDung>(this.detach_NguoiDungs));
			this._PhanQuyens = new EntitySet<PhanQuyen>(new Action<PhanQuyen>(this.attach_PhanQuyens), new Action<PhanQuyen>(this.detach_PhanQuyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhomNguoiDung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNhomNguoiDung
		{
			get
			{
				return this._MaNhomNguoiDung;
			}
			set
			{
				if ((this._MaNhomNguoiDung != value))
				{
					this.OnMaNhomNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._MaNhomNguoiDung = value;
					this.SendPropertyChanged("MaNhomNguoiDung");
					this.OnMaNhomNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhomNguoiDung", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TenNhomNguoiDung
		{
			get
			{
				return this._TenNhomNguoiDung;
			}
			set
			{
				if ((this._TenNhomNguoiDung != value))
				{
					this.OnTenNhomNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._TenNhomNguoiDung = value;
					this.SendPropertyChanged("TenNhomNguoiDung");
					this.OnTenNhomNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomNguoiDung_NguoiDung", Storage="_NguoiDungs", ThisKey="MaNhomNguoiDung", OtherKey="MaNhomNguoiDung")]
		public EntitySet<NguoiDung> NguoiDungs
		{
			get
			{
				return this._NguoiDungs;
			}
			set
			{
				this._NguoiDungs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomNguoiDung_PhanQuyen", Storage="_PhanQuyens", ThisKey="MaNhomNguoiDung", OtherKey="MaNhomNguoiDung")]
		public EntitySet<PhanQuyen> PhanQuyens
		{
			get
			{
				return this._PhanQuyens;
			}
			set
			{
				this._PhanQuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.NhomNguoiDung = this;
		}
		
		private void detach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.NhomNguoiDung = null;
		}
		
		private void attach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.NhomNguoiDung = this;
		}
		
		private void detach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.NhomNguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanHoi")]
	public partial class PhanHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhanHoiID;
		
		private int _SanPhamID;
		
		private int _NguoiDungID;
		
		private string _NoiDung;
		
		private System.Nullable<int> _DanhGia;
		
		private System.Nullable<System.DateTime> _NgayPhanHoi;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhanHoiIDChanging(int value);
    partial void OnPhanHoiIDChanged();
    partial void OnSanPhamIDChanging(int value);
    partial void OnSanPhamIDChanged();
    partial void OnNguoiDungIDChanging(int value);
    partial void OnNguoiDungIDChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnDanhGiaChanging(System.Nullable<int> value);
    partial void OnDanhGiaChanged();
    partial void OnNgayPhanHoiChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayPhanHoiChanged();
    #endregion
		
		public PhanHoi()
		{
			this._NguoiDung = default(EntityRef<NguoiDung>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanHoiID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhanHoiID
		{
			get
			{
				return this._PhanHoiID;
			}
			set
			{
				if ((this._PhanHoiID != value))
				{
					this.OnPhanHoiIDChanging(value);
					this.SendPropertyChanging();
					this._PhanHoiID = value;
					this.SendPropertyChanged("PhanHoiID");
					this.OnPhanHoiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamID", DbType="Int NOT NULL")]
		public int SanPhamID
		{
			get
			{
				return this._SanPhamID;
			}
			set
			{
				if ((this._SanPhamID != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPhamIDChanging(value);
					this.SendPropertyChanging();
					this._SanPhamID = value;
					this.SendPropertyChanged("SanPhamID");
					this.OnSanPhamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiDungID", DbType="Int NOT NULL")]
		public int NguoiDungID
		{
			get
			{
				return this._NguoiDungID;
			}
			set
			{
				if ((this._NguoiDungID != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNguoiDungIDChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungID = value;
					this.SendPropertyChanged("NguoiDungID");
					this.OnNguoiDungIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanhGia", DbType="Int")]
		public System.Nullable<int> DanhGia
		{
			get
			{
				return this._DanhGia;
			}
			set
			{
				if ((this._DanhGia != value))
				{
					this.OnDanhGiaChanging(value);
					this.SendPropertyChanging();
					this._DanhGia = value;
					this.SendPropertyChanged("DanhGia");
					this.OnDanhGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayPhanHoi", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayPhanHoi
		{
			get
			{
				return this._NgayPhanHoi;
			}
			set
			{
				if ((this._NgayPhanHoi != value))
				{
					this.OnNgayPhanHoiChanging(value);
					this.SendPropertyChanging();
					this._NgayPhanHoi = value;
					this.SendPropertyChanged("NgayPhanHoi");
					this.OnNgayPhanHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_PhanHoi", Storage="_NguoiDung", ThisKey="NguoiDungID", OtherKey="NguoiDungID", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.PhanHois.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.PhanHois.Add(this);
						this._NguoiDungID = value.NguoiDungID;
					}
					else
					{
						this._NguoiDungID = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_PhanHoi", Storage="_SanPham", ThisKey="SanPhamID", OtherKey="SanPhamID", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.PhanHois.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.PhanHois.Add(this);
						this._SanPhamID = value.SanPhamID;
					}
					else
					{
						this._SanPhamID = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanQuyen")]
	public partial class PhanQuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNhomNguoiDung;
		
		private string _MaManHinh;
		
		private EntityRef<ManHinh> _ManHinh;
		
		private EntityRef<NhomNguoiDung> _NhomNguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhomNguoiDungChanging(int value);
    partial void OnMaNhomNguoiDungChanged();
    partial void OnMaManHinhChanging(string value);
    partial void OnMaManHinhChanged();
    #endregion
		
		public PhanQuyen()
		{
			this._ManHinh = default(EntityRef<ManHinh>);
			this._NhomNguoiDung = default(EntityRef<NhomNguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhomNguoiDung", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNhomNguoiDung
		{
			get
			{
				return this._MaNhomNguoiDung;
			}
			set
			{
				if ((this._MaNhomNguoiDung != value))
				{
					if (this._NhomNguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhomNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._MaNhomNguoiDung = value;
					this.SendPropertyChanged("MaNhomNguoiDung");
					this.OnMaNhomNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaManHinh", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaManHinh
		{
			get
			{
				return this._MaManHinh;
			}
			set
			{
				if ((this._MaManHinh != value))
				{
					if (this._ManHinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaManHinhChanging(value);
					this.SendPropertyChanging();
					this._MaManHinh = value;
					this.SendPropertyChanged("MaManHinh");
					this.OnMaManHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ManHinh_PhanQuyen", Storage="_ManHinh", ThisKey="MaManHinh", OtherKey="MaManHinh", IsForeignKey=true)]
		public ManHinh ManHinh
		{
			get
			{
				return this._ManHinh.Entity;
			}
			set
			{
				ManHinh previousValue = this._ManHinh.Entity;
				if (((previousValue != value) 
							|| (this._ManHinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ManHinh.Entity = null;
						previousValue.PhanQuyens.Remove(this);
					}
					this._ManHinh.Entity = value;
					if ((value != null))
					{
						value.PhanQuyens.Add(this);
						this._MaManHinh = value.MaManHinh;
					}
					else
					{
						this._MaManHinh = default(string);
					}
					this.SendPropertyChanged("ManHinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomNguoiDung_PhanQuyen", Storage="_NhomNguoiDung", ThisKey="MaNhomNguoiDung", OtherKey="MaNhomNguoiDung", IsForeignKey=true)]
		public NhomNguoiDung NhomNguoiDung
		{
			get
			{
				return this._NhomNguoiDung.Entity;
			}
			set
			{
				NhomNguoiDung previousValue = this._NhomNguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NhomNguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhomNguoiDung.Entity = null;
						previousValue.PhanQuyens.Remove(this);
					}
					this._NhomNguoiDung.Entity = value;
					if ((value != null))
					{
						value.PhanQuyens.Add(this);
						this._MaNhomNguoiDung = value.MaNhomNguoiDung;
					}
					else
					{
						this._MaNhomNguoiDung = default(int);
					}
					this.SendPropertyChanged("NhomNguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SanPhamID;
		
		private string _TenSanPham;
		
		private string _MoTa;
		
		private System.Nullable<int> _SoSaoTB;
		
		private System.Nullable<int> _DanhMucID;
		
		private System.Nullable<int> _SoLuongDaBan;
		
		private System.Nullable<bool> _KichHoat;
		
		private EntitySet<ChiTietKhuyenMai> _ChiTietKhuyenMais;
		
		private EntitySet<ChiTietSanPham> _ChiTietSanPhams;
		
		private EntitySet<NhaCungCapSanPham> _NhaCungCapSanPhams;
		
		private EntitySet<PhanHoi> _PhanHois;
		
		private EntityRef<DanhMuc> _DanhMuc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSanPhamIDChanging(int value);
    partial void OnSanPhamIDChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnSoSaoTBChanging(System.Nullable<int> value);
    partial void OnSoSaoTBChanged();
    partial void OnDanhMucIDChanging(System.Nullable<int> value);
    partial void OnDanhMucIDChanged();
    partial void OnSoLuongDaBanChanging(System.Nullable<int> value);
    partial void OnSoLuongDaBanChanged();
    partial void OnKichHoatChanging(System.Nullable<bool> value);
    partial void OnKichHoatChanged();
    #endregion
		
		public SanPham()
		{
			this._ChiTietKhuyenMais = new EntitySet<ChiTietKhuyenMai>(new Action<ChiTietKhuyenMai>(this.attach_ChiTietKhuyenMais), new Action<ChiTietKhuyenMai>(this.detach_ChiTietKhuyenMais));
			this._ChiTietSanPhams = new EntitySet<ChiTietSanPham>(new Action<ChiTietSanPham>(this.attach_ChiTietSanPhams), new Action<ChiTietSanPham>(this.detach_ChiTietSanPhams));
			this._NhaCungCapSanPhams = new EntitySet<NhaCungCapSanPham>(new Action<NhaCungCapSanPham>(this.attach_NhaCungCapSanPhams), new Action<NhaCungCapSanPham>(this.detach_NhaCungCapSanPhams));
			this._PhanHois = new EntitySet<PhanHoi>(new Action<PhanHoi>(this.attach_PhanHois), new Action<PhanHoi>(this.detach_PhanHois));
			this._DanhMuc = default(EntityRef<DanhMuc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SanPhamID
		{
			get
			{
				return this._SanPhamID;
			}
			set
			{
				if ((this._SanPhamID != value))
				{
					this.OnSanPhamIDChanging(value);
					this.SendPropertyChanging();
					this._SanPhamID = value;
					this.SendPropertyChanged("SanPhamID");
					this.OnSanPhamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(MAX)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoSaoTB", DbType="Int")]
		public System.Nullable<int> SoSaoTB
		{
			get
			{
				return this._SoSaoTB;
			}
			set
			{
				if ((this._SoSaoTB != value))
				{
					this.OnSoSaoTBChanging(value);
					this.SendPropertyChanging();
					this._SoSaoTB = value;
					this.SendPropertyChanged("SoSaoTB");
					this.OnSoSaoTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanhMucID", DbType="Int")]
		public System.Nullable<int> DanhMucID
		{
			get
			{
				return this._DanhMucID;
			}
			set
			{
				if ((this._DanhMucID != value))
				{
					if (this._DanhMuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDanhMucIDChanging(value);
					this.SendPropertyChanging();
					this._DanhMucID = value;
					this.SendPropertyChanged("DanhMucID");
					this.OnDanhMucIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongDaBan", DbType="Int")]
		public System.Nullable<int> SoLuongDaBan
		{
			get
			{
				return this._SoLuongDaBan;
			}
			set
			{
				if ((this._SoLuongDaBan != value))
				{
					this.OnSoLuongDaBanChanging(value);
					this.SendPropertyChanging();
					this._SoLuongDaBan = value;
					this.SendPropertyChanged("SoLuongDaBan");
					this.OnSoLuongDaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KichHoat", DbType="Bit")]
		public System.Nullable<bool> KichHoat
		{
			get
			{
				return this._KichHoat;
			}
			set
			{
				if ((this._KichHoat != value))
				{
					this.OnKichHoatChanging(value);
					this.SendPropertyChanging();
					this._KichHoat = value;
					this.SendPropertyChanged("KichHoat");
					this.OnKichHoatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietKhuyenMai", Storage="_ChiTietKhuyenMais", ThisKey="SanPhamID", OtherKey="SanPhamID")]
		public EntitySet<ChiTietKhuyenMai> ChiTietKhuyenMais
		{
			get
			{
				return this._ChiTietKhuyenMais;
			}
			set
			{
				this._ChiTietKhuyenMais.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietSanPham", Storage="_ChiTietSanPhams", ThisKey="SanPhamID", OtherKey="SanPhamID")]
		public EntitySet<ChiTietSanPham> ChiTietSanPhams
		{
			get
			{
				return this._ChiTietSanPhams;
			}
			set
			{
				this._ChiTietSanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_NhaCungCapSanPham", Storage="_NhaCungCapSanPhams", ThisKey="SanPhamID", OtherKey="SanPhamID")]
		public EntitySet<NhaCungCapSanPham> NhaCungCapSanPhams
		{
			get
			{
				return this._NhaCungCapSanPhams;
			}
			set
			{
				this._NhaCungCapSanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_PhanHoi", Storage="_PhanHois", ThisKey="SanPhamID", OtherKey="SanPhamID")]
		public EntitySet<PhanHoi> PhanHois
		{
			get
			{
				return this._PhanHois;
			}
			set
			{
				this._PhanHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_SanPham", Storage="_DanhMuc", ThisKey="DanhMucID", OtherKey="DanhMucID", IsForeignKey=true)]
		public DanhMuc DanhMuc
		{
			get
			{
				return this._DanhMuc.Entity;
			}
			set
			{
				DanhMuc previousValue = this._DanhMuc.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._DanhMuc.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._DanhMucID = value.DanhMucID;
					}
					else
					{
						this._DanhMucID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DanhMuc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietKhuyenMais(ChiTietKhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietKhuyenMais(ChiTietKhuyenMai entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_ChiTietSanPhams(ChiTietSanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietSanPhams(ChiTietSanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_NhaCungCapSanPhams(NhaCungCapSanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_NhaCungCapSanPhams(NhaCungCapSanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_PhanHois(PhanHoi entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_PhanHois(PhanHoi entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Size")]
	public partial class Size : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SizeID;
		
		private string _TenSize;
		
		private EntitySet<ChiTietSanPham> _ChiTietSanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSizeIDChanging(int value);
    partial void OnSizeIDChanged();
    partial void OnTenSizeChanging(string value);
    partial void OnTenSizeChanged();
    #endregion
		
		public Size()
		{
			this._ChiTietSanPhams = new EntitySet<ChiTietSanPham>(new Action<ChiTietSanPham>(this.attach_ChiTietSanPhams), new Action<ChiTietSanPham>(this.detach_ChiTietSanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SizeID
		{
			get
			{
				return this._SizeID;
			}
			set
			{
				if ((this._SizeID != value))
				{
					this.OnSizeIDChanging(value);
					this.SendPropertyChanging();
					this._SizeID = value;
					this.SendPropertyChanged("SizeID");
					this.OnSizeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSize", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenSize
		{
			get
			{
				return this._TenSize;
			}
			set
			{
				if ((this._TenSize != value))
				{
					this.OnTenSizeChanging(value);
					this.SendPropertyChanging();
					this._TenSize = value;
					this.SendPropertyChanged("TenSize");
					this.OnTenSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Size_ChiTietSanPham", Storage="_ChiTietSanPhams", ThisKey="SizeID", OtherKey="SizeID")]
		public EntitySet<ChiTietSanPham> ChiTietSanPhams
		{
			get
			{
				return this._ChiTietSanPhams;
			}
			set
			{
				this._ChiTietSanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietSanPhams(ChiTietSanPham entity)
		{
			this.SendPropertyChanging();
			entity.Size = this;
		}
		
		private void detach_ChiTietSanPhams(ChiTietSanPham entity)
		{
			this.SendPropertyChanging();
			entity.Size = null;
		}
	}
}
#pragma warning restore 1591
